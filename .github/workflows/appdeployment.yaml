name: Build, Push, and Deploy to ECS/Fargate
on:
  workflow_dispatch:

jobs:
  build-and-push-and-deploy:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        service: [appointmentapp]  

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS CLI for authentication and region setup
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1

      # Step 3: Authenticate Docker with AWS ECR
      - name: Authenticate Docker with ECR
        run: |
          echo "Authenticating Docker with AWS ECR..."
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 539935451710.dkr.ecr.us-east-1.amazonaws.com

      # Step 4: Build and tag Docker image, then push to ECR
      - name: Build and Push Docker Image to ECR
        run: |
          echo "Building and tagging Docker image for service: ${{ matrix.service }}"

          IMAGE_NAME="539935451710.dkr.ecr.us-east-1.amazonaws.com/hcl_ecr_repo"
    
          # Build the Docker image
          docker build -t $IMAGE_NAME ./${{ matrix.service }}
    
          # Tag the Docker image with "latest"
          docker tag $IMAGE_NAME $IMAGE_NAME:latest
    
          echo "Pushing Docker image to ECR..."
        
          # Push both tags to ECR
          docker push $IMAGE_NAME
          docker push $IMAGE_NAME:latest
    
          echo "Docker image pushed successfully!"

      # Step 5: Deploy the service to ECS/Fargate
      - name: Deploy to ECS/Fargate
        run: |
          echo "Deploying service: ${{ matrix.service }} to ECS/Fargate..."
          aws ecs update-service \
          --cluster hcl_ecs_cluster \
          --service appointmentapp \
          --force-new-deployment

